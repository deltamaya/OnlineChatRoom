// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinychat {

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr SignUpArg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SignUpArg::SignUpArg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SignUpArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignUpArgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignUpArgDefaultTypeInternal() {}
  union {
    SignUpArg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignUpArgDefaultTypeInternal _SignUpArg_default_instance_;

inline constexpr LoginArg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR LoginArg::LoginArg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginArgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginArgDefaultTypeInternal() {}
  union {
    LoginArg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginArgDefaultTypeInternal _LoginArg_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateGroupArg::CreateGroupArg(::_pbi::ConstantInitialized) {}
struct CreateGroupArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateGroupArgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateGroupArgDefaultTypeInternal() {}
  union {
    CreateGroupArg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateGroupArgDefaultTypeInternal _CreateGroupArg_default_instance_;

inline constexpr ChatArg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{0},
        isgroup_{false},
        targetid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChatArg::ChatArg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChatArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatArgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatArgDefaultTypeInternal() {}
  union {
    ChatArg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatArgDefaultTypeInternal _ChatArg_default_instance_;
}  // namespace tinychat
static ::_pb::Metadata file_level_metadata_message_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _impl_.isgroup_),
    PROTOBUF_FIELD_OFFSET(::tinychat::ChatArg, _impl_.targetid_),
    1,
    0,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::tinychat::LoginArg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinychat::LoginArg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinychat::LoginArg, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::tinychat::LoginArg, _impl_.password_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::tinychat::SignUpArg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinychat::SignUpArg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinychat::SignUpArg, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::tinychat::SignUpArg, _impl_.password_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinychat::CreateGroupArg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinychat::Status, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinychat::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinychat::Status, _impl_.code_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::tinychat::ChatArg)},
        {16, 26, -1, sizeof(::tinychat::LoginArg)},
        {28, 38, -1, sizeof(::tinychat::SignUpArg)},
        {40, -1, -1, sizeof(::tinychat::CreateGroupArg)},
        {48, 57, -1, sizeof(::tinychat::Status)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tinychat::_ChatArg_default_instance_._instance,
    &::tinychat::_LoginArg_default_instance_._instance,
    &::tinychat::_SignUpArg_default_instance_._instance,
    &::tinychat::_CreateGroupArg_default_instance_._instance,
    &::tinychat::_Status_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rmessage.proto\022\010tinychat\"F\n\007ChatArg\022\013\n\003"
    "uid\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\017\n\007isGroup\030\003 \001(\010\022"
    "\020\n\010targetId\030\004 \001(\005\")\n\010LoginArg\022\013\n\003uid\030\001 \002"
    "(\t\022\020\n\010password\030\002 \002(\t\"/\n\tSignUpArg\022\020\n\010use"
    "rname\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"\020\n\016CreateG"
    "roupArg\"\026\n\006Status\022\014\n\004code\030\001 \002(\0052\331\001\n\004Chat"
    "\0220\n\007PostMsg\022\021.tinychat.ChatArg\032\020.tinycha"
    "t.Status\"\000\022/\n\005Login\022\022.tinychat.LoginArg\032"
    "\020.tinychat.Status\"\000\0221\n\006SignUp\022\023.tinychat"
    ".SignUpArg\032\020.tinychat.Status\"\000\022;\n\013Create"
    "Group\022\030.tinychat.CreateGroupArg\032\020.tinych"
    "at.Status\"\000"
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    451,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);
namespace tinychat {
// ===================================================================

class ChatArg::_Internal {
 public:
  using HasBits = decltype(std::declval<ChatArg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChatArg, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_isgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ChatArg::ChatArg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinychat.ChatArg)
}
inline PROTOBUF_NDEBUG_INLINE ChatArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        msg_(arena, from.msg_) {}

ChatArg::ChatArg(
    ::google::protobuf::Arena* arena,
    const ChatArg& from)
    : ::google::protobuf::Message(arena) {
  ChatArg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, uid_),
           offsetof(Impl_, targetid_) -
               offsetof(Impl_, uid_) +
               sizeof(Impl_::targetid_));

  // @@protoc_insertion_point(copy_constructor:tinychat.ChatArg)
}
inline PROTOBUF_NDEBUG_INLINE ChatArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msg_(arena) {}

inline void ChatArg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uid_),
           0,
           offsetof(Impl_, targetid_) -
               offsetof(Impl_, uid_) +
               sizeof(Impl_::targetid_));
}
ChatArg::~ChatArg() {
  // @@protoc_insertion_point(destructor:tinychat.ChatArg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChatArg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChatArg::Clear() {
// @@protoc_insertion_point(message_clear_start:tinychat.ChatArg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.msg_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.uid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.targetid_) -
        reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.targetid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChatArg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 28, 2> ChatArg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChatArg, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChatArg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 targetId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChatArg, _impl_.targetid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.targetid_)}},
    // required int32 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChatArg, _impl_.uid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.uid_)}},
    // required string msg = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.msg_)}},
    // optional bool isGroup = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChatArg, _impl_.isgroup_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.isgroup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 uid = 1;
    {PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.uid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string msg = 2;
    {PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.msg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool isGroup = 3;
    {PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.isgroup_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 targetId = 4;
    {PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.targetid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\3\0\0\0\0\0"
    "tinychat.ChatArg"
    "msg"
  }},
};

::uint8_t* ChatArg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinychat.ChatArg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_uid(), target);
  }

  // required string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tinychat.ChatArg.msg");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool isGroup = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_isgroup(), target);
  }

  // optional int32 targetId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_targetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinychat.ChatArg)
  return target;
}

::size_t ChatArg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinychat.ChatArg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_msg());
    }

    // required int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uid());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional bool isGroup = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional int32 targetId = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_targetid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChatArg::_class_data_ = {
    ChatArg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChatArg::GetClassData() const {
  return &_class_data_;
}

void ChatArg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChatArg*>(&to_msg);
  auto& from = static_cast<const ChatArg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinychat.ChatArg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_msg(from._internal_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.isgroup_ = from._impl_.isgroup_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.targetid_ = from._impl_.targetid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChatArg::CopyFrom(const ChatArg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinychat.ChatArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChatArg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChatArg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChatArg::InternalSwap(ChatArg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.targetid_)
      + sizeof(ChatArg::_impl_.targetid_)
      - PROTOBUF_FIELD_OFFSET(ChatArg, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::google::protobuf::Metadata ChatArg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}
// ===================================================================

class LoginArg::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginArg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoginArg, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

LoginArg::LoginArg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinychat.LoginArg)
}
inline PROTOBUF_NDEBUG_INLINE LoginArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_),
        password_(arena, from.password_) {}

LoginArg::LoginArg(
    ::google::protobuf::Arena* arena,
    const LoginArg& from)
    : ::google::protobuf::Message(arena) {
  LoginArg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinychat.LoginArg)
}
inline PROTOBUF_NDEBUG_INLINE LoginArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena),
        password_(arena) {}

inline void LoginArg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoginArg::~LoginArg() {
  // @@protoc_insertion_point(destructor:tinychat.LoginArg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoginArg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoginArg::Clear() {
// @@protoc_insertion_point(message_clear_start:tinychat.LoginArg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoginArg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> LoginArg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoginArg, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoginArg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string password = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LoginArg, _impl_.password_)}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoginArg, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(LoginArg, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string password = 2;
    {PROTOBUF_FIELD_OFFSET(LoginArg, _impl_.password_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\3\10\0\0\0\0\0"
    "tinychat.LoginArg"
    "uid"
    "password"
  }},
};

::uint8_t* LoginArg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinychat.LoginArg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tinychat.LoginArg.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tinychat.LoginArg.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinychat.LoginArg)
  return target;
}

::size_t LoginArg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinychat.LoginArg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string password = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_password());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoginArg::_class_data_ = {
    LoginArg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoginArg::GetClassData() const {
  return &_class_data_;
}

void LoginArg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoginArg*>(&to_msg);
  auto& from = static_cast<const LoginArg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinychat.LoginArg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_password(from._internal_password());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginArg::CopyFrom(const LoginArg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinychat.LoginArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoginArg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* LoginArg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoginArg::InternalSwap(LoginArg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata LoginArg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}
// ===================================================================

class SignUpArg::_Internal {
 public:
  using HasBits = decltype(std::declval<SignUpArg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_._has_bits_);
  static void set_has_username(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SignUpArg::SignUpArg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinychat.SignUpArg)
}
inline PROTOBUF_NDEBUG_INLINE SignUpArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        password_(arena, from.password_) {}

SignUpArg::SignUpArg(
    ::google::protobuf::Arena* arena,
    const SignUpArg& from)
    : ::google::protobuf::Message(arena) {
  SignUpArg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinychat.SignUpArg)
}
inline PROTOBUF_NDEBUG_INLINE SignUpArg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        password_(arena) {}

inline void SignUpArg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignUpArg::~SignUpArg() {
  // @@protoc_insertion_point(destructor:tinychat.SignUpArg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignUpArg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SignUpArg::Clear() {
// @@protoc_insertion_point(message_clear_start:tinychat.SignUpArg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SignUpArg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> SignUpArg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SignUpArg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string password = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_.password_)}},
    // required string username = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string username = 1;
    {PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string password = 2;
    {PROTOBUF_FIELD_OFFSET(SignUpArg, _impl_.password_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\10\10\0\0\0\0\0"
    "tinychat.SignUpArg"
    "username"
    "password"
  }},
};

::uint8_t* SignUpArg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinychat.SignUpArg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tinychat.SignUpArg.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tinychat.SignUpArg.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinychat.SignUpArg)
  return target;
}

::size_t SignUpArg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinychat.SignUpArg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string username = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // required string password = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_password());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SignUpArg::_class_data_ = {
    SignUpArg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SignUpArg::GetClassData() const {
  return &_class_data_;
}

void SignUpArg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SignUpArg*>(&to_msg);
  auto& from = static_cast<const SignUpArg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinychat.SignUpArg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_password(from._internal_password());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignUpArg::CopyFrom(const SignUpArg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinychat.SignUpArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SignUpArg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SignUpArg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SignUpArg::InternalSwap(SignUpArg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata SignUpArg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}
// ===================================================================

class CreateGroupArg::_Internal {
 public:
};

CreateGroupArg::CreateGroupArg(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinychat.CreateGroupArg)
}
CreateGroupArg::CreateGroupArg(
    ::google::protobuf::Arena* arena,
    const CreateGroupArg& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CreateGroupArg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinychat.CreateGroupArg)
}









::google::protobuf::Metadata CreateGroupArg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[3]);
}
// ===================================================================

class Status::_Internal {
 public:
  using HasBits = decltype(std::declval<Status>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_);
  static void set_has_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinychat.Status)
}
Status::Status(
    ::google::protobuf::Arena* arena, const Status& from)
    : Status(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_ = {};
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:tinychat.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:tinychat.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Status::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.code_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 code = 1;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinychat.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinychat.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinychat.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 code = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinychat.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinychat.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tinychat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
